// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

import {ObjectMeta} from "../meta/v1";

export namespace secretsstore {
    export namespace v1alpha1 {
        /**
         * SecretProviderClassPodStatusStatus defines the observed state of SecretProviderClassPodStatus
         */
        export interface SecretProviderClassPodStatusStatus {
            mounted?: boolean;
            objects?: outputs.secretsstore.v1alpha1.SecretProviderClassPodStatusStatusObjects[];
            podName?: string;
            secretProviderClassName?: string;
            targetPath?: string;
        }

        /**
         * SecretProviderClassObject defines the object fetched from external secrets store
         */
        export interface SecretProviderClassPodStatusStatusObjects {
            id?: string;
            version?: string;
        }

        /**
         * SecretProviderClassSpec defines the desired state of SecretProviderClass
         */
        export interface SecretProviderClassSpec {
            /**
             * Configuration for specific provider
             */
            parameters?: {[key: string]: string};
            /**
             * Configuration for provider name
             */
            provider?: string;
            secretObjects?: outputs.secretsstore.v1alpha1.SecretProviderClassSpecSecretObjects[];
        }

        /**
         * SecretObject defines the desired state of synced K8s secret objects
         */
        export interface SecretProviderClassSpecSecretObjects {
            /**
             * annotations of k8s secret object
             */
            annotations?: {[key: string]: string};
            data?: outputs.secretsstore.v1alpha1.SecretProviderClassSpecSecretObjectsData[];
            /**
             * labels of K8s secret object
             */
            labels?: {[key: string]: string};
            /**
             * name of the K8s secret object
             */
            secretName?: string;
            /**
             * type of K8s secret object
             */
            type?: string;
        }

        /**
         * SecretObjectData defines the desired state of synced K8s secret object data
         */
        export interface SecretProviderClassSpecSecretObjectsData {
            /**
             * data field to populate
             */
            key?: string;
            /**
             * name of the object to sync
             */
            objectName?: string;
        }

        /**
         * SecretProviderClassStatus defines the observed state of SecretProviderClass
         */
        export interface SecretProviderClassStatus {
            byPod?: outputs.secretsstore.v1alpha1.SecretProviderClassStatusByPod[];
        }

        /**
         * ByPodStatus defines the state of SecretProviderClass as seen by an individual controller
         */
        export interface SecretProviderClassStatusByPod {
            /**
             * id of the pod that wrote the status
             */
            id?: string;
            /**
             * namespace of the pod that wrote the status
             */
            namespace?: string;
        }
    }
}
